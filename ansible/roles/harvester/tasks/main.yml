---
- name: set pxe_server_ip fact
  set_fact:
    pxe_server_ip: "{{ hostvars['pxe-server-' + settings['harvester_cluster']['name_suffix']]['ansible_eth0']['ipv4']['address'] }}"

- name: create Harvester config dir
  file:
    path: /var/www/harvester
    state: directory

- name: copy config-create.yaml
  template:
    src: "config-create.yaml.j2"
    dest: /var/www/harvester/config-create.yaml
    owner: www-data
    mode: 0640
  vars:
    hostname: "harvester-{{ settings['harvester_cluster']['name_suffix'] }}-1"
    ip: "{{ settings['harvester_network_config']['cluster'][0]['ip'] }}"
    subnet_mask: "{{ settings['harvester_network_config']['cluster'][0]['subnet_mask'] }}"
    gateway: "{{ settings['harvester_network_config']['cluster'][0]['gateway'] }}"
    mgmt_interface_name: "{{ settings['harvester_network_config']['cluster'][0]['mgmt_interface'] }}"
    pxe_server_ip: "{{ pxe_server_ip }}"

- name: fetch config-create.yaml
  fetch:
    src: /var/www/harvester/config-create.yaml
    dest: fetched/config-create.yaml
    flat: yes

- name: set config-create content fact
  set_fact:
    config_create_content: "{{ lookup('file', 'fetched/config-create.yaml') }}"

- name: Get additional harvester config from URL
  uri:
    url: "{{ settings['harvester_config']['additional_content_url'] }}"
    validate_certs: no
    return_content: yes
  register: additional_config_content
  when: settings['harvester_config']['additional_content_url']

- name: save additional harvester config
  copy:
    content: "{{ additional_config_content.content }}"
    dest: /var/www/harvester/config-additional.yaml
    owner: www-data
    mode: 0640
  when: settings['harvester_config']['additional_content_url']

- name: fetch config-additional.yaml
  fetch:
    src: /var/www/harvester/config-additional.yaml
    dest: fetched/config-additional.yaml
    flat: yes
  when: settings['harvester_config']['additional_content_url']

- name: merge create config
  copy:
    content: "{{ dict1 | combine(dict2, recursive=true) | to_nice_yaml }}"
    dest: /var/www/harvester/config-create.yaml
    owner: www-data
    mode: 0640
  vars:
    dict1: "{{ config_create_content | from_yaml }}"
    dict2: "{{ additional_config_content.content | from_yaml }}"
  when: settings['harvester_config']['additional_content_url']

- name: fetch config-create.yaml again
  fetch:
    src: /var/www/harvester/config-create.yaml
    dest: fetched/config-create-merge.yaml
    flat: yes
  when: settings['harvester_config']['additional_content_url']

# NOTE(gyee): Ansible pre-process the with_sequence variable, so we have to
# make sure end sequence is at least 2 even if we have only one Harvester node
- name: set node sequence fact
  set_fact:
    end_sequence: "{{ settings['harvester_cluster_nodes'] }}"

- name: copy config-join.yaml
  template:
    src: "config-join.yaml.j2"
    dest: /var/www/harvester/config-join-{{ item }}.yaml
    owner: www-data
    mode: 0640
  vars:
    hostname: "harvester-{{ settings['harvester_cluster']['name_suffix'] }}-{{ item }}"
    ip: "{{ settings['harvester_network_config']['cluster'][item|int - 1]['ip'] }}"
    subnet_mask: "{{ settings['harvester_network_config']['cluster'][item|int - 1]['subnet_mask'] }}"
    gateway: "{{ settings['harvester_network_config']['cluster'][item|int - 1]['gateway'] }}"
    mgmt_interface_name: "{{ settings['harvester_network_config']['cluster'][item|int - 1]['mgmt_interface'] }}"
    pxe_server_ip: "{{ pxe_server_ip }}"
  with_sequence: "start=2 end={{ end_sequence }}"
  when: settings['harvester_cluster_nodes'] > 1

- name: fetch config-join.yaml
  fetch:
    src: "/var/www/harvester/config-join-{{ item }}.yaml"
    dest: "fetched/config-join-{{ item }}.yaml"
    flat: yes
  with_sequence: "start=2 end={{ end_sequence }}"
  when: settings['harvester_cluster_nodes'] > 1

- name: set config-join content fact
  set_fact:
    "config_join_content_{{ item }}": "{{ lookup('file', 'fetched/config-join-' + item + '.yaml') }}"
  with_sequence: "start=2 end={{ end_sequence }}"
  when: settings['harvester_cluster_nodes'] > 1

- name: merge join config
  copy:
    content: "{{ dict1 | combine(dict2, recursive=true) | to_nice_yaml }}"
    dest: /var/www/harvester/config-join-{{ item }}.yaml
    owner: www-data
    mode: 0640
  vars:
    dict1: "{{ vars['config_join_content_' + item] | from_yaml }}"
    dict2: "{{ additional_config_content.content | from_yaml }}"
  with_sequence: "start=2 end={{ end_sequence }}"
  when: settings['harvester_cluster_nodes'] > 1 and settings['harvester_config']['additional_content_url']

- name: fetch config-join.yaml again
  fetch:
    src: "/var/www/harvester/config-join-{{ item }}.yaml"
    dest: "fetched/config-join-merged-{{ item }}.yaml"
    flat: yes
  with_sequence: "start=2 end={{ end_sequence }}"
  when: settings['harvester_cluster_nodes'] > 1 and settings['harvester_config']['additional_content_url']

- name: chown dir
  file:
    path: /var/www/harvester/
    owner: www-data
    recurse: yes

- name: create boot entry for the first node
  template:
    src: ipxe-create.j2
    dest: /var/www/harvester/{{ settings['harvester_network_config']['cluster'][0]['mac']|lower }}
  vars:
    boot_interface: "{{ settings['harvester_network_config']['cluster'][0]['vagrant_interface'] }}"
    pxe_server_ip: "{{ pxe_server_ip }}"

- name: create boot entry for the cluster members
  template:
    src: ipxe-join.j2
    dest: /var/www/harvester/{{ settings['harvester_network_config']['cluster'][item|int - 1 ]['mac']|lower }}
  vars:
    node_number: "{{ item }}"
    boot_interface: "{{ settings['harvester_network_config']['cluster'][item|int - 1]['vagrant_interface'] }}"
    pxe_server_ip: "{{ pxe_server_ip }}"
  with_sequence: "start=2 end={{ end_sequence }}"
  when: settings['harvester_cluster_nodes'] > 1

- name: download Harvester kernel
  include: _download_media.yml
  vars:
    harvester_media_url: "{{ settings['harvester_kernel_url'] }}"
    media_filename: "harvester-vmlinuz-amd64"

- name: download Harvester ramdisk
  include: _download_media.yml
  vars:
    harvester_media_url: "{{ settings['harvester_ramdisk_url'] }}"
    media_filename: "harvester-initrd-amd64"

- name: download Harvester ISO
  include: _download_media.yml
  vars:
    harvester_media_url: "{{ settings['harvester_iso_url'] }}"
    media_filename: "harvester-amd64.iso"

- name: download Harvester Root FS
  include: _download_media.yml
  vars:
    harvester_media_url: "{{ settings['harvester_rootfs_url'] }}"
    media_filename: "harvester-rootfs-amd64.squashfs"
